<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_SP1K1_MONO" Id="{397aec28-b6d3-4c1c-afed-2cc3b34939d3}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_SP1K1_MONO
VAR

    // Where is the STO
    {attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^E5 (EK1122)^X1 SP1K1-MONO(EK1100)^SP1K1-EL1004-E17^Channel 1^Input'}
    bSTOEnable1 AT %I*: BOOL;
    {attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^E5 (EK1122)^X1 SP1K1-MONO(EK1100)^SP1K1-EL1004-E17^Channel 2^Input'}
    bSTOEnable2 AT %I*: BOOL;


    fbMotionStage_m_pi  :FB_MotionStage;
    fbMotionStage_g_pi  :FB_MotionStage;
    fbMotionStage_m_h   :FB_MotionStage;
    fbMotionStage_g_h   :FB_MotionStage;
    fbMotionStage_s_r   :FB_MotionStage;
    fbMotionStage_s_io  :FB_MotionStage;

    {attribute 'TcLinkTo' := '.Count:=TIIB[m_pi_up_dwn_e]^FB Inputs Channel 1^Position'}
    mpi_upe  AT %I*:  ST_RenishawAbsEnc:=(ref:=0);
    {attribute 'TcLinkTo' := '.Count:=TIIB[g_pi_up_dwn_e]^FB Inputs Channel 1^Position'}
    gpi_upe  AT %I*:  ST_RenishawAbsEnc:=(ref:=0);

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:ENC:M_PI:02
        io: o
    '}
    mpi_upeurad: LREAL;
    {attribute 'pytmc' := '
        pv: SP1K1:MONO:ENC:G_PI:02
        io: o
    '}
    gpi_upeurad: LREAL;

    (*RTDs*)
    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:01
        io: o
    '}
     {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 1^Value;
                              .bError := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 1^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 1^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 1^Status^Overrange'}
    RTD1 : FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:02
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 2^Value;
                              .bError := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 2^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 2^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3202-E13]^RTD Inputs Channel 2^Status^Overrange'}
    RTD2 : FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:03
        io: o
    '}
     {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 1^Value;
                              .bError := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 1^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 1^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 1^Status^Overrange'}
    RTD3 :FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:04
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 2^Value;
                              .bError := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 2^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 2^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3202-E14]^RTD Inputs Channel 2^Status^Overrange'}
    RTD4 : FB_TempSensor;

        {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:05
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 1^Value;
                              .bError := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 1^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 1^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 1^Status^Overrange'}
    RTD5 : FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:06
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 2^Value;
                              .bError := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 2^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 2^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3204-E15]^RTD Inputs Channel 2^Status^Overrange'}
    RTD6 : FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:07
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 1^Value;
                              .bError := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 1^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 1^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 1^Status^Overrange'}
    RTD7 : FB_TempSensor;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:RTD:08
        io: o
    '}
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 2^Value;
                              .bError := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 2^Status^Error;
                              .bUnderrange := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 2^Status^Underrange;
                              .bOverrange := TIIB[SP1K1-EL3204-E16]^RTD Inputs Channel 2^Status^Overrange'}
    RTD8 :FB_TempSensor;





    //////////TODO

    {attribute 'pytmc' := '
        pv: GM:PITCH:fipi_read
        io: i
    '}
    fipi_read: LREAL;

    {attribute 'pytmc' := '
        pv: GM:PITCH:fipi_set
        io: o
    '}
    fipi_set:  LREAL;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:LED:01:PWR
        io: io
        field: ZNAM OFF
        field: ONAM ON
    '}
    {attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^E5 (EK1122)^Box 84 (EP2338-0002)^Channel 10^Output'}
    bLEDPower01 AT %Q*: BOOL;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:LED:02:PWR
        io: io
        field: ZNAM OFF
        field: ONAM ON
    '}
    {attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^E5 (EK1122)^Box 84 (EP2338-0002)^Channel 12^Output'}
    bLEDPower02 AT %Q*: BOOL;

    {attribute 'pytmc' := '
        pv: SP1K1:MONO:LED:03:PWR
        io: io
        field: ZNAM OFF
        field: ONAM ON
    '}
    {attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^E5 (EK1122)^Box 84 (EP2338-0002)^Channel 14^Output'}
    bLEDPower03 AT %Q*: BOOL;

    sd_io_FFO    :    FB_FastFault :=(
        i_DevName := 'SP1K1-MONO',
        i_Desc := 'Fault occurs When SP1K1-MONO screw driver motor is not in the out position',
        i_TypeCode := 16#1110);
    sd_io_e_pmps : LREAL:= 74000.29;

        // SP1K1 Flow Press Sensors
    {attribute 'TcLinkTo' := '.iRaw := TIIB[EL3054_SP1K1_FWM_PRSM]^AI Standard Channel 1^Value'}
    fSP1K1_Flow_1 : FB_AnalogInput;
    {attribute 'pytmc' := '
        pv: SP1K1:MONO:FWM:1
        field: EGU lpm
        io: i
    '}
    fSP1K1_Flow_1_val : LREAL;
    {attribute 'TcLinkTo' := '.iRaw := TIIB[EL3054_SP1K1_FWM_PRSM]^AI Standard Channel 2^Value'}
    fSP1K1_Flow_2 : FB_AnalogInput;
    {attribute 'pytmc' := '
        pv: SP1K1:MONO:FWM:2
        field: EGU lpm
        io: i
    '}
    fSP1K1_Flow_2_val : LREAL;
    {attribute 'TcLinkTo' := '.iRaw := TIIB[EL3054_SP1K1_FWM_PRSM]^AI Standard Channel 3^Value'}
    fSP1K1_Press_1 : FB_AnalogInput;
    {attribute 'pytmc' := '
        pv: SP1K1:MONO:PRSM:1
        field: EGU bar
        io: i
    '}
    fSP1K1_Press_1_val : LREAL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// SP1K1-MONO
M6.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;
M7.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;
M8.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;
M9.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;
M10.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;
M11.bHardwareEnable := bSTOEnable1 AND bSTOEnable2;

fbMotionStage_m_pi  (stMotionStage:=M6);
fbMotionStage_g_pi  (stMotionStage:=M7);
fbMotionStage_m_h  (stMotionStage:=M8);
fbMotionStage_g_h  (stMotionStage:=M9);
fbMotionStage_s_io  (stMotionStage:=M10);
fbMotionStage_s_r  (stMotionStage:=M11);

//S_R with no hardware limit switched
M11.bLimitBackwardEnable := TRUE;
M11.bLimitForwardEnable := TRUE;

mpi_upeurad := ULINT_TO_LREAL(mpi_upe.Count)*0.004505;
gpi_upeurad := ULINT_TO_LREAL(gpi_upe.Count)*0.0066667;

(*RTDs*)
RTD1();
RTD2();
RTD3();
RTD4();
RTD5();
RTD6();
RTD7();
RTD8();

//Evaluate the encoder reading for the screw driver encoder. Fast fault when it is not out.
// i.e. encoder value must be greater than the out position (75000.29 - 1000u)
IF( M10.Axis.NcToPlc.ActPos < sd_io_e_pmps) THEN
        sd_io_FFO.i_xOK := FALSE;
    ELSE
        sd_io_FFO.i_xOK := TRUE;
END_IF

(*FAST FAULT*)
sd_io_FFO(i_xOK := ,
    i_xReset := ,
    i_xAutoReset :=TRUE,
    io_fbFFHWO := GVL_PMPS.fbFastFaultOutput1);

fSP1K1_Flow_1(iTermBits:=12, fTermMax:=5.0427, fTermMin:=0.050472);
fSP1K1_Flow_1_val := fSP1K1_Flow_1.fReal;

fSP1K1_Flow_2(iTermBits:=12, fTermMax:=5.0427, fTermMin:=0.050472);
fSP1K1_Flow_2_val := fSP1K1_Flow_2.fReal;

fSP1K1_Press_1(iTermBits:=12, fTermMax:=4.0, fTermMin:=0);
fSP1K1_Press_1_val := fSP1K1_Press_1.fReal;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>